import { GoogleGenAI } from '@google/genai'
import { env } from '../env.ts'

const gemini = new GoogleGenAI({
   apiKey: env.GEMINI_API_KEY,
})

const model = 'gemini-2.5-flash'

export async function transcribeAudio(audioBase64: string, mimeType: string) {
  const response = await gemini.models.generateContent({
    model,
    contents: [
      {
        role: "user",
        parts: [
          {
            text: "Transcreva para mim o √°udio, sem tirar nada e nem gerar coisas a mais, apenas transcreva de forma clara e objetiva. Na l√≠ngua Portuguesa Brasil."
          },
          {
            inlineData: {
              mimeType,
              data: audioBase64
            }
          }
        ]
      }
    ]
  });

  if (!response.text) {
    throw new Error("Erro ao transcrever o √°udio");
  }

  return response.text;
}

export async function generateEmbeddings(text: string) {
    const response = await gemini.models.embedContent({
        model: 'text-embedding-004',
        contents: [{ text }],
        config: {
            taskType: 'RETRIEVAL_DOCUMENT'
        }
    })

    if(!response.embeddings) {
        throw new Error("Erro ao gerar os embeddings");
    }

    return response.embeddings[0].values;
}

export async function generateAnswer(question: string, transcriptions: string[]) {
  const context = transcriptions.join('\n\n');

  const prompt = `Voc√™ √© um assistente educacional especializado em explicar conceitos de forma did√°tica e clara.

CONTEXTO DA AULA: ${context}

PERGUNTA DO ALUNO: ${question}

INSTRU√á√ïES PARA RESPONDER:

1. AN√ÅLISE DO CONTEXTO:
   - Identifique o TEMA PRINCIPAL da aula (ex: banco de dados, programa√ß√£o, matem√°tica, etc.)
   - Extraia os CONCEITOS-CHAVE sendo discutidos
   - Identifique se a pergunta √© sobre um conceito GERAL ou algo ESPEC√çFICO da aula

2. ESTRAT√âGIA DE RESPOSTA:

   PARA CONCEITOS GERAIS (ex: "O que √© uma tabela?", "Como funciona SQL?"):
   - Responda como um professor experiente
   - D√™ uma explica√ß√£o clara e did√°tica do conceito
   - Use linguagem acess√≠vel e exemplos pr√°ticos
   - Comece com: "Com base no tema da aula sobre [tema], posso explicar que..."
   - N√ÉO cite frases espec√≠ficas da transcri√ß√£o

   PARA PERGUNTAS ESPEC√çFICAS (ex: "O professor mencionou 32 tabelas, por qu√™?"):
   - Cite o contexto espec√≠fico: "Durante a aula foi mencionado que..."
   - Explique o contexto e complete com conhecimento educativo

   PARA PERGUNTAS SEM RELA√á√ÉO:
   - "Esta pergunta n√£o se relaciona com o conte√∫do da aula sobre [tema]."

3. ESTILO DA RESPOSTA:
   - Tom educativo, paciente e encorajador
   - Linguagem clara, sem jarg√µes desnecess√°rios
   - Estrutura: Defini√ß√£o ‚Üí Explica√ß√£o ‚Üí Exemplo pr√°tico (quando apropriado)
   - Portugu√™s Brasil coloquial mas profissional
   - Par√°grafos normais, sem formata√ß√£o especial

4. EXEMPLO DE BOA RESPOSTA:
   "Com base no tema da aula sobre banco de dados, posso explicar que uma tabela √© uma estrutura fundamental onde organizamos dados relacionados. Pense nela como uma planilha do Excel, onde cada linha representa um registro (como dados de uma pessoa) e cada coluna representa um atributo espec√≠fico (como nome, idade, email). Na pr√°tica, se voc√™ tem um sistema de escola, teria uma tabela para alunos, outra para professores e outra para disciplinas, cada uma armazenando informa√ß√µes espec√≠ficas de sua categoria."

Responda de forma educativa e clara:`.trim();

  const response = await gemini.models.generateContent({
    model,
    contents: [
      {
        text: prompt
      }
    ]
  })

  if(!response.text) {
    throw new Error("Erro ao gerar a resposta");
  }

  return response.text;
}

// Nova fun√ß√£o para gerar metadados da sala baseado na transcri√ß√£o
export async function generateRoomMetadata(transcription: string) {
  const prompt = `Analise a seguinte transcri√ß√£o de uma aula e gere metadados estruturados.

TRANSCRI√á√ÉO: ${transcription}

INSTRU√á√ïES:
1. Identifique o tema principal da aula
2. Crie um t√≠tulo atrativo e espec√≠fico (m√°ximo 60 caracteres)
3. Escreva uma descri√ß√£o clara e informativa (m√°ximo 200 caracteres)
4. Liste os principais t√≥picos abordados

RESPONDA EXATAMENTE neste formato JSON (sem formata√ß√£o markdown):
{
  "suggestedTitle": "T√≠tulo espec√≠fico da aula baseado no conte√∫do real",
  "suggestedDescription": "Descri√ß√£o clara dos conceitos e temas abordados na aula",
  "mainTopic": "√Årea principal de conhecimento",
  "keyTopics": ["t√≥pico1", "t√≥pico2", "t√≥pico3"]
}

EXEMPLOS DE BONS T√çTULOS:
- "Banco de Dados: Normaliza√ß√£o e Depend√™ncias Funcionais"
- "JavaScript: Arrays e M√©todos de Itera√ß√£o" 
- "Matem√°tica: Fun√ß√£o Quadr√°tica e Par√°bolas"

Baseie-se apenas no conte√∫do real da transcri√ß√£o:`;

  const response = await gemini.models.generateContent({
    model,
    contents: [{ text: prompt }]
  });

  if (!response.text) {
    throw new Error("Erro ao gerar metadados da sala");
  }

  try {
    // Limpar poss√≠vel formata√ß√£o markdown
    const cleanedText = response.text.replace(/```json\n?/g, '').replace(/```\n?/g, '').trim();
    const metadata = JSON.parse(cleanedText);
    
    // Validar campos essenciais
    if (!metadata.suggestedTitle || !metadata.suggestedDescription) {
      throw new Error("Metadata incompleta");
    }
    
    // Limitar tamanhos
    metadata.suggestedTitle = metadata.suggestedTitle.substring(0, 60);
    metadata.suggestedDescription = metadata.suggestedDescription.substring(0, 200);
    
    console.log('‚úÖ Generated metadata:', metadata);
    return metadata;
    
  } catch (parseError) {
    console.warn('‚ö†Ô∏è Failed to parse AI metadata response:', parseError);
    console.log('üìù Raw response:', response.text);
    
    // Fallback mais inteligente baseado na transcri√ß√£o
    const fallbackTitle = generateFallbackTitle(transcription);
    const fallbackDescription = generateFallbackDescription(transcription);
    
    return {
      suggestedTitle: fallbackTitle,
      suggestedDescription: fallbackDescription,
      mainTopic: "Educa√ß√£o",
      keyTopics: ["Aprendizado", "Conte√∫do Educativo"]
    };
  }
}

// Fun√ß√µes auxiliares para fallback
function generateFallbackTitle(transcription: string): string {
  const words = transcription.toLowerCase();
  
  // Detectar temas comuns
  if (words.includes('banco de dados') || words.includes('tabela') || words.includes('sql')) {
    return "Aula sobre Banco de Dados";
  } else if (words.includes('javascript') || words.includes('fun√ß√£o') || words.includes('array')) {
    return "Aula de JavaScript";
  } else if (words.includes('matem√°tica') || words.includes('equa√ß√£o') || words.includes('fun√ß√£o')) {
    return "Aula de Matem√°tica";
  } else if (words.includes('f√≠sica') || words.includes('for√ßa') || words.includes('energia')) {
    return "Aula de F√≠sica";
  } else if (words.includes('qu√≠mica') || words.includes('rea√ß√£o') || words.includes('elemento')) {
    return "Aula de Qu√≠mica";
  } else {
    return "Conte√∫do Educativo";
  }
}

function generateFallbackDescription(transcription: string): string {
  const preview = transcription.substring(0, 150);
  return `Aula baseada no conte√∫do: ${preview}...`;
}
